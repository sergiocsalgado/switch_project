@startuml
'https://plantuml.com/class-diagram
legend top
Class Diagram
end legend
left to right direction
'..> dependente
'-- associado
UI..>RegisterAccountController
UI..>SetAccountProfileController
UI..>AccountsAndStatusController
UI..>CreateProfileController
UI..>ActivateAccountController
UI..>InactivateAccountController
InactivateAccountController..>Company:company
RegisterAccountController..>Company:company
AccountsAndStatusController..>Company:company
CreateProfileController..>Company:company
SetAccountProfileController..>Company: company
ActivateAccountController..>Company: company

Company ..> ProfileContainer:profileContainer
AccountContainer..>AccountStatusDTO
Company..>AccountContainer: accountContainer
AccountContainer"1"*--"*" Account
Account ..> Profile
ProfileContainer "1"*--"*" Profile

class RegisterAccountController{
+RegisterAccountController(Company company)
+registerAccount(String email, String name,
String phoneNumber, boolean status): boolean
}

class SetAccountProfileController {
+SetAccountProfileController(Company company)
+setAccountProfile(String email,String description) boolean
}

class AccountsAndStatusController {
+AccountsAndStatusController(Company company)
+accountsAndStatus(): List
}

class AccountStatusDTO {
-email: String
-status: boolean
+AccountStatusDTO(String email, boolean status)
+getEmail():String
+getStatus():boolean
}

class InactivateAccountController {
+InactivateAccountController(Company company)
+inactivateAccount(String email) : boolean
}

class ActivateAccountController {
+ActivateAccountController(Company company)
+activateAccount(String email) : boolean
}

class CreateProfileController {
+CreateProfileController(Company company)
+createProfile(String description):boolean
}

class AccountContainer {
-accounts: List<Account>
+AccountContainer()
+saveAccount(Account account):boolean
+listAccounts(): List
}

class Company {
+Company(AccountContainer accountContainer, ProfileContainer profileContainer)
+createProfile(String description):boolean
+registerAccount(String email, String name,
 String phoneNumber,boolean status): boolean
+setAccountProfile(String email, String description): boolean
+inactivateAccount(String email): boolean
+activateAccount(String email): boolean
+accountsAndStatus(): List
-saveProfile(Profile profile: boolean
-saveAccount(Account account): boolean
}

class ProfileContainer {
-profiles: List<Profile>
+ProfileContainer()
+defaultProfile()
+saveProfile(Profile profile): boolean
+listProfiles(): List<Profile>
}

class Account {
-email: String
-name: String
-status: boolean
-phoneNumber: String
-profile: Profile
+Account(String email. String name, boolean status,
String phoneNumber, Profile profile)
+getEmail(): String
+getName(): String
+getPhoneNumber(): String
+getStatus(): boolean
+getProfile(): Profile
+setName(String name): boolean
+setPhoneNumber(String phoneNumber): boolean
+setStatus(boolean status): boolean
+setProfile(Profile profile): boolean
+verifyEmail(String email): boolean
}

class Profile {
-description: String
+Profile(String description):
+verifyDescription(String description): boolean
+copy(): Profile
}

@enduml